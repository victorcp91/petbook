name: Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: '18'

jobs:
  # Pre-deployment Tests
  pre-deployment-tests:
    name: Pre-deployment Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # - name: Run linting
      #   run: npm run lint

      - name: Run type checking
        run: npm run type-check

      - name: Run unit tests
        run: npm run test:unit

      - name: Run integration tests
        run: npm run test:integration

      - name: Run security audit
        run: npm run security:audit

  # Build and Deploy
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: pre-deployment-tests
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'

  # Post-deployment Tests
  post-deployment-tests:
    name: Post-deployment Tests
    runs-on: ubuntu-latest
    needs: build-and-deploy
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run smoke tests
        run: npm run test:smoke
        env:
          CYPRESS_BASE_URL: ${{ secrets.VERCEL_URL }}

      - name: Run health checks
        run: npm run test:health
        env:
          CYPRESS_BASE_URL: ${{ secrets.VERCEL_URL }}

  # Deployment Summary
  deployment-summary:
    name: Deployment Summary
    runs-on: ubuntu-latest
    needs: [pre-deployment-tests, build-and-deploy, post-deployment-tests]
    if: always()

    steps:
      - name: Generate deployment summary
        run: |
          echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Pre-deployment Tests" >> $GITHUB_STEP_SUMMARY
          echo "- Status: ${{ needs.pre-deployment-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- TypeScript: ${{ needs.pre-deployment-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Unit Tests: ${{ needs.pre-deployment-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Integration Tests: ${{ needs.pre-deployment-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Security Audit: ${{ needs.pre-deployment-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Build and Deploy" >> $GITHUB_STEP_SUMMARY
          echo "- Status: ${{ needs.build-and-deploy.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Build: ${{ needs.build-and-deploy.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Deployment: ${{ needs.build-and-deploy.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Post-deployment Tests" >> $GITHUB_STEP_SUMMARY
          echo "- Status: ${{ needs.post-deployment-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Smoke Tests: ${{ needs.post-deployment-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Health Checks: ${{ needs.post-deployment-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Overall Status" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ needs.pre-deployment-tests.result }}" == "success" && "${{ needs.build-and-deploy.result }}" == "success" && "${{ needs.post-deployment-tests.result }}" == "success" ]]; then
            echo "✅ **Deployment successful!** All checks passed." >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Deployment failed.** Please review the results above." >> $GITHUB_STEP_SUMMARY
          fi
